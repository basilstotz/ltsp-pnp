#!/bin/sh
### BEGIN INIT INFO
# Provides:          ltsp-pnp
# Required-Start:    $local_fs $network $remote_fs $syslog
# Required-Stop:     $local_fs $network $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: <Enter a short description of the software>
# Description:       <Enter a long description of the software>
#                    <...>
#                    <...>
### END INIT INFO

# Author: Basil Stotz <stotz@amxa.ch>

#
# Function that starts the daemon/service
#
do_start()
{
  if test -e /opt/ltsp/images/i386.img; then
    if ! test -e /var/lock/ltsp-pnp.lock; then
       service nbd-server start
       service dnsmasq start
       touch /var/lock/ltsp-pnp.lock
    fi
  fi 
}

#
# Function that stops the daemon/service
#
do_stop()
{
  if test -e /var/lock/ltsp-pnp.lock; then
    service nbd-server stop
    service dnsmasq stop
    rm /var/lock/ltsp-pnp.lock
  fi
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
  do_stop
  do_start
}

do_clone() {

  # Erzeugen eines Autostarts für den Unity Panel Service
  echo '[Desktop Entry]
    Type=Application
    Name=Unity Panel Service
    Exec=/usr/lib/unity/unity-panel-service
' >> /etc/xdg/autostart/unity-panel-service.desktop

  mv /usr/share/applications/ltsp-pnp.desktop /usr/share/applications/ltsp-pnp.desktop.off

  /usr/share/ltsp/update-kernels

  ltsp-update-image --cleanup /

  echo "ltsp-clone-$(date)" >/etc/ltsp/this_image_name

  mv /usr/share/applications/ltsp-pnp.desktop.off /usr/share/applications/ltsp-pnp.desktop

  rm /ext/xdg/autostart/unity-panel-service.desktop

#  service nbd-server restart
#  do_start

}

do_init() {
  if ! test -f /etc/ltsp/initialized; then

      echo "configuring system..."
      ltsp-config dnsmasq
      # In Ubuntu 14.04 und höher muss dnsmasq auch als DNS fungieren                           
      sed -i 's/^port=0/#port=0/g' /etc/dnsmasq.d/ltsp-server-dnsmasq.conf

      # patch update-kernels.conf"                                                              
      # Kernelupdate im LTSP-Verzeichnis                                                        
      sed -i 's/^#IPAPPEND=3/IPAPPEND=3/g' /etc/ltsp/update-kernels.conf
      #???? /usr/share/ltsp/update-kernels                                                      

      echo "fix screen lock"
      # Damit der Screen Lock funktioniert, müssen ltsp-client-core und ldm aktualisiert werden
      # Zuvor muss die Datei update-kernels.conf gesichert werden                               
      cp /etc/ltsp/update-kernels.conf /etc/ltsp/update-kernels.bak
      wget http://ftp.de.debian.org/debian/pool/main/l/ltsp/ltsp-client-core_5.5.4-4_i386.deb
      wget http://ftp.de.debian.org/debian/pool/main/l/ldm/ldm_2.2.15-2_i386.deb
      dpkg -i ltsp-client-core_5.5.4-4_i386.deb ldm_2.2.15-2_i386.deb
      rm ltsp-client-core_5.5.4-4_i386.deb ldm_2.2.15-2_i386.deb
      mv /etc/ltsp/update-kernels.bak /etc/ltsp/update-kernels.conf
      # Modifikation, um den Screen Lock zu ermöglichen                  
      sed -i 's/^disable-lock-screen=true/#disable-lock-screen=true/g' /usr/share/ltsp/init-ltsp.d/50-gsettings-overrides

      echo "set ldm background"
      # Ersetzt den Ubuntu LTSP-Loginscreen durch den Standard-Desktophintergrund               
      cp /usr/share/backgrounds/warty-final-ubuntu.png /usr/share/ldm/themes/ubuntu/bg.png


      # Generieren der lts.conf                                                                 
      echo "generate lts.conf"
      echo '[Default]                                                                           
        # Diese Services müssen auf den Clients deaktiviert werden, um Konflikte zu vermeiden   
        RM_SYSTEM_SERVICES="dnsmasq nbd-server ltsp-pnp"                                        
                                                                                                
        # Modifikation, um den Screen Lock zu ermöglichen                                       
        LDM_PASSWORD_HASH=True                                                                  
      ' >> /var/lib/tftpboot/ltsp/i386/lts.conf

       #preset /etc/ltsp/this_image_name
       echo -n "" > /etc/ltsp/this_image_name

    # never run again
    touch /etc/ltsp/initialized
  fi
}


do_upgrade() {

   LOCAL=$(cat /etc/ltsp/this_image_name)

   if test -z "$2"; then
      URL="http://www.amxa.ch/andrijn/images/"
   else
      URL=$2
   fi
   REMOTE=$(wget $URL/current_image_name -O - 2>/dev/null||echo $LOCAL)

   if ! test -f /var/lock/ltsp-pnp-upgrade.lock; then

     touch /var/lock/ltsp-pnp-upgrade.lock

     if test "$LOCAL"!="$REMOTE"; then
       cd /opt/ltsp/images
       if test -z "$LOCAL"; then
         LOCAL=$REMOTE
         touch $LOCAL
       fi
       if zsync -i $LOCAL $URL/$REMOTE.zsync; then
         echo "$REMOTE" >/etc/ltsp/this_image_name
         if test -e i386.img; then
            if test -h i386.img; then
                rm i386.img
            else
                mv i386.img i386.clone
            fi
         fi
         if test "$LOCAL"!="$REMOTE"; then rm $LOCAL;fi
         ln -s $REMOTE i386.img
       fi
    fi

    rm /var/lock/ltsp-pnp-upgrade.lock
  fi
}

case "$1" in
  start)
        do_start
	;;
  stop)
        do_stop
	;;
  restart)
        do_relaod
	;;
  clone)
        do_init
        do_clone
        do_reload
	;;
  upgrade)
        do_init
        do_upgrade $2
        do_reload
  init)
        do_init
        ;;
  *)
	#echo "Usage: $0 {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $0 {start|stop|clone|upgrade|init|restart}" >&2
	exit 3
	;;
esac

exit 0

